name: GutHub Backend 

on:
  push:
    paths:
      - .github/**
      - Backend/**

jobs:
  lint:
    runs-on: ubuntu-22.04
    name: Lint

    steps:
      - name: lint here
        run: echo "linting . . ."

  test:
    needs: lint
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ./Backend

    name: Run tests
    steps:
      - name: Checkout repo
        uses: actions/checkout@master

      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 23
      
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: run unit tests
        run: mvn -B clean test -PUnit

      - name: run integration tests
        run: mvn -B clean test -PIntegration

  build:
    needs: test
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ./Backend

    name: Build and analyze
    steps:
      - name: Checkout repo
        uses: actions/checkout@master
        with:
          fetch-depth: 0

      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 23

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BACKEND }}
        run: mvn -B install -DskipTests org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=fmahdi09_GutHub_Backend

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: guthub-build-java-23
          path: ./Backend/target

  deliver:
    needs: build
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/backend')

    name: Deliver Docker image
    steps:
      - name: Checkout repo
        uses: actions/checkout@master

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: guthub-build-java-23
          path: ./Backend/target

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }} 

      - name: Get version from tag
        id: get-version
        run: |
          fullVersion=${{ github.ref_name }}
          echo "version=${fullVersion:8}" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./Backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/guthub-backend:${{ steps.get-version.outputs.version }}, ${{ secrets.DOCKERHUB_USERNAME }}/guthub-backend:latest
