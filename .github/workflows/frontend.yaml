name: GutHub Frontend

on:
  push:
    paths:
      - .github/**
      - Frontend/**

jobs:
  lint:
    runs-on: ubuntu-22.04

    name: Lint
    steps:
      - name: lint here
        run: echo "linting . . ."

  analysis:
    needs: lint
    runs-on: ubuntu-22.04

    name: Static code analysis
    steps:
      - name: Checkout repo
        uses: actions/checkout@master
        with:
          fetch-depth: 0

      - name: Sonarcloud scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: ./Frontend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONTEND }}

  test:
    needs: analysis
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ./Frontend

    name: Run tests
    steps:
      - name: Checkout repo
        uses: actions/checkout@master

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.9.0
          cache: npm
          cache-dependency-path: ./Frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:ci

  build:
    needs: test
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ./Frontend

    name: Build
    steps:
      - name: Checkout repo
        uses: actions/checkout@master

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.9.0
          cache: npm
          cache-dependency-path: ./Frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: guthub-frontend-build
          path: ./Frontend/dist/frontend

  deliver:
    needs: build
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/frontend')

    name: Deliver Docker image
    steps:
      - name: Checkout repo
        uses: actions/checkout@master

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: guthub-frontend-build
          path: ./Frontend/dist/frontend

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get version from tag
        id: get-version
        run: |
          fullVersion=${{ github.ref_name }}
          echo "version=${fullVersion:9}" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./Frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/guthub-frontend:${{ steps.get-version.outputs.version }}, ${{ secrets.DOCKERHUB_USERNAME }}/guthub-frontend:latest
